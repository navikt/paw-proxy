name: Build and deploy

on:
  push:
    branches:
      - main
      - dev/*

jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with maven
        run: mvn -B --no-transfer-progress package --file pom.xml

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: paw
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: [build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: nais/deploy/actions/deploy@v1
        env:
          TEAM: paw
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais/dev.yaml
          PRINT_PAYLOAD: true
          REF: ${{ env.COMMIT }}
          VAR: image=${{ needs.build.outputs.image }}

  deploy-prod:
    name: Deploy to Production
    needs: [deploy-dev]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: nais/deploy/actions/deploy@v1
        env:
          TEAM: paw
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          DRY_RUN: false
          RESOURCE: nais/prod.yaml
          PRINT_PAYLOAD: true
          REF: ${{ env.COMMIT }}
          VAR: image=${{ needs.build.outputs.image }}
